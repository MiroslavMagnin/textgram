version: "3.0"

networks:
  app:
    driver: bridge

volumes:
  db-data:
    driver: local
  kafka-data:
    driver: local
  zookeeper-data:
    driver: local
  redis-data:
    driver: local

services:
  # My services
  gateway:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    networks:
      - app
    depends_on:
      - postgres
      - auth
      - user
      - post
    env_file:
      - ".env"
    ports:
      - "8080:8080"

  auth:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    networks:
      - app
    depends_on:
      - postgres
      - kafka
    env_file:
      - ".env"
    ports:
      - "8090:8090"

  user:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    networks:
      - app
    depends_on:
      - postgres
      - kafka
    env_file:
      - ".env"
    ports:
      - "8091:8091"

  post:
    build:
      context: ./post-service
      dockerfile: Dockerfile
    networks:
      - app
    depends_on:
      - user
      - kafka
    env_file:
      - ".env"
    ports:
      - "8093:8093"

  # Outside services
  zookeeper:
    image: "confluentinc/cp-zookeeper:latest"
    container_name: zookeeper
    networks:
      - app
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data

  kafka:
    image: "confluentinc/cp-kafka:latest"
    container_name: kafka
    networks:
      - app
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/var/lib/kafka/data

  redis:
    image: redis:7.2-rc-alpine
    container_name: redis
    networks:
      - app
    env_file:
      - .env
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis-data:/data

  postgres:
    image: "postgres:latest"
    container_name: postgres
    networks:
      - app
    env_file:
      - .env
    ports:
      - "5437:5432"
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    volumes:
      - db-data:/var/lib/postgresql/data

